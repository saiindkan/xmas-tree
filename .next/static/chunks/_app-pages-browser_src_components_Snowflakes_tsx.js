"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_components_Snowflakes_tsx"],{

/***/ "(app-pages-browser)/./src/components/Snowflakes.tsx":
/*!***************************************!*\
  !*** ./src/components/Snowflakes.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n// Snowflake symbols\nconst SNOWFLAKE_SYMBOLS = [\n    \"❄\",\n    \"❅\",\n    \"❆\",\n    \"•\",\n    \"❃\",\n    \"❉\",\n    \"❋\",\n    \"✻\",\n    \"✼\",\n    \"❄️\"\n];\nconst Snowflakes = ()=>{\n    _s();\n    const [snowflakes, setSnowflakes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0\n    });\n    // Update window size on resize\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateSize = ()=>{\n            setWindowSize({\n                width: window.innerWidth,\n                height: document.body.scrollHeight\n            });\n        };\n        // Initial size\n        updateSize();\n        // Update on resize\n        window.addEventListener(\"resize\", updateSize);\n        return ()=>window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    // Create snowflakes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // More snowflakes for larger screens\n        const flakeCount = Math.min(100, Math.floor(window.innerWidth / 10));\n        const newSnowflakes = Array(flakeCount).fill(0).map((_, i)=>{\n            const size = Math.random() * 12 + 3; // 3px to 15px\n            const duration = 15 + Math.random() * 30; // 15s to 45s\n            return {\n                id: i,\n                left: \"\".concat(Math.random() * 100, \"%\"),\n                animationDuration: \"\".concat(duration, \"s\"),\n                delay: \"\".concat(Math.random() * 15, \"s\"),\n                size: \"\".concat(size, \"px\"),\n                opacity: Math.random() * 0.7 + 0.3,\n                sway: \"\".concat((Math.random() - 0.5) * 100, \"px\"),\n                swayDuration: \"\".concat(5 + Math.random() * 10, \"s\"),\n                symbol: SNOWFLAKE_SYMBOLS[Math.floor(Math.random() * SNOWFLAKE_SYMBOLS.length)]\n            };\n        });\n        setSnowflakes(newSnowflakes);\n    }, [\n        windowSize\n    ]);\n    // Custom styles for the snow container\n    const snowContainerStyle = {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\",\n        zIndex: 1000,\n        overflow: \"hidden\"\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: snowContainerStyle,\n        children: snowflakes.map((flake)=>{\n            // Create keyframe name for each snowflake for unique animations\n            const animationName = \"snowfall-\".concat(flake.id);\n            // Create style tag for this snowflake's animation\n            const styleTag = document.createElement(\"style\");\n            styleTag.innerHTML = \"\\n          @keyframes \".concat(animationName, \" {\\n            0% {\\n              transform: translateY(-10%) translateX(0);\\n              opacity: 0;\\n            }\\n            10% {\\n              opacity: \").concat(flake.opacity, \";\\n            }\\n            90% {\\n              opacity: \").concat(flake.opacity, \";\\n            }\\n            100% {\\n              transform: translateY(100vh) translateX(\").concat(flake.sway, \");\\n              opacity: 0;\\n            }\\n          }\\n        \");\n            // Add style to head\n            if (typeof document !== \"undefined\") {\n                document.head.appendChild(styleTag);\n            }\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    left: flake.left,\n                    top: \"-20px\",\n                    fontSize: flake.size,\n                    animation: \"\".concat(animationName, \" \").concat(flake.animationDuration, \" \").concat(flake.delay, \" infinite linear\"),\n                    willChange: \"transform, opacity\",\n                    userSelect: \"none\",\n                    pointerEvents: \"none\",\n                    textShadow: \"0 0 5px rgba(255, 255, 255, 0.7)\",\n                    zIndex: 1000\n                },\n                children: flake.symbol\n            }, flake.id, false, {\n                fileName: \"/Users/anonymous/Downloads/xmas-tree/src/components/Snowflakes.tsx\",\n                lineNumber: 113,\n                columnNumber: 11\n            }, undefined);\n        })\n    }, void 0, false, {\n        fileName: \"/Users/anonymous/Downloads/xmas-tree/src/components/Snowflakes.tsx\",\n        lineNumber: 81,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Snowflakes, \"Umf1OT70J4zcpjhFwavcZCDQedQ=\");\n_c = Snowflakes;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Snowflakes);\nvar _c;\n$RefreshReg$(_c, \"Snowflakes\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Snowflakes.tsx\n"));

/***/ })

}]);