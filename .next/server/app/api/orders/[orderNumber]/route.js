"use strict";(()=>{var e={};e.id=982,e.ids=[982],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},92710:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>w,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>x,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{GET:()=>c});var o=t(49303),a=t(88716),i=t(60670),n=t(87070),u=t(45609),l=t(95456);let d=new(t(53524)).PrismaClient;async function c(e,{params:r}){try{let e=await (0,u.getServerSession)(l.L);if(!e?.user?.email)return n.NextResponse.json({error:"Authentication required"},{status:401});let t=await d.user.findUnique({where:{email:e.user.email}});t||(t=await d.user.create({data:{email:e.user.email,name:e.user.name||"OAuth User",password:""}}),console.log(`[Orders] Created new OAuth user: ${t.email}`));let s=await d.order.findFirst({where:{orderNumber:r.orderNumber,userId:t.id},include:{orderItems:!0,user:{select:{name:!0,email:!0}}}});if(!s)return n.NextResponse.json({error:"Order not found"},{status:404});return n.NextResponse.json({success:!0,order:s})}catch(e){return console.error("[Orders] Error fetching order:",e),n.NextResponse.json({error:"Failed to fetch order"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/orders/[orderNumber]/route",pathname:"/api/orders/[orderNumber]",filename:"route",bundlePath:"app/api/orders/[orderNumber]/route"},resolvedPagePath:"/Users/snaga310/Desktop/workspace/xmas-tree/src/app/api/orders/[orderNumber]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:x}=p,g="/api/orders/[orderNumber]/route";function w(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:h})}},95456:(e,r,t)=>{t.d(r,{L:()=>u});var s=t(77234),o=t(24459),a=t(53797),i=t(98691),n=t(13538);let u={providers:[(0,s.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,authorization:{params:{prompt:"select_account"}}}),(0,o.Z)({clientId:process.env.FACEBOOK_CLIENT_ID,clientSecret:process.env.FACEBOOK_CLIENT_SECRET,authorization:{params:{scope:"email",auth_type:"rerequest"}}}),(0,a.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(console.log("[NextAuth] Authorize called with:",{email:e?.email,passwordProvided:!!e?.password}),!e?.email||!e?.password)throw console.log("[NextAuth] Missing credentials"),Error("Email and password are required");let r=e.email,t=e.password;try{console.log("[NextAuth] Looking up user:",r);let e=await n._.user.findUnique({where:{email:r}});if(!e)throw console.log("[NextAuth] User not found:",r),Error("Invalid email or password");if(console.log("[NextAuth] User found, checking password"),!await i.ZP.compare(t,e.password))throw console.log("[NextAuth] Invalid password for user:",r),Error("Invalid email or password");return console.log("[NextAuth] Authentication successful for:",r),{id:e.id.toString(),email:e.email,name:e.name,image:null}}catch(e){throw console.error("[NextAuth] Authorization error:",e),e}}})],session:{strategy:"jwt",maxAge:86400},pages:{signIn:"/auth/signin",error:"/auth/error"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id),e),session:async({session:e,token:r})=>(r&&(e.user.id=r.id),e),redirect:async({url:e,baseUrl:r})=>e.startsWith("/")?`${r}${e}`:new URL(e).origin===r?e:r,async signIn({user:e,account:r}){if(console.log("[NextAuth] SignIn callback called",{user:e?.email,account:r?.provider}),r?.provider==="google"||r?.provider==="facebook")try{await n._.user.findUnique({where:{email:e.email}})?console.log("[NextAuth] Existing OAuth user found:",e.email):(console.log("[NextAuth] Creating new user from OAuth:",e.email),await n._.user.create({data:{email:e.email,name:e.name||"",password:""}}))}catch(e){return console.error("[NextAuth] Error handling OAuth user:",e),!1}return!0}},secret:process.env.NEXTAUTH_SECRET,debug:!1}},13538:(e,r,t)=>{t.d(r,{_:()=>o});var s=t(53524);let o=global.prisma||new s.PrismaClient({log:["error"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,901,668,70],()=>t(92710));module.exports=s})();